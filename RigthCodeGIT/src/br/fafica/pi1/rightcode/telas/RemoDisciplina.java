/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.fafica.pi1.rightcode.telas;

import br.fafica.pi1.rightcode.exception.CodigoInvalidoException;
import br.fafica.pi1.rightcode.exception.FiltroNaoEncontradoException;
import br.fafica.pi1.rightcode.exception.NomeInvalidoException;
import br.fafica.pi1.rightcode.exception.FiltrolistaVaziaException;
import br.fafica.pi1.rightcode.exception.UsuarioNaoEncontradoException;
import br.fafica.pi1.rightcode.disciplina.Disciplina;
import br.fafica.pi1.rightcode.exception.DisciplinaListaVaziaException;
import br.fafica.pi1.rightcode.exception.DisciplinaNaoEncontradaException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import br.fafica.pi1.rightcode.fachada.Fachada;
import br.fafica.pi1.rightcode.usuario.Usuario;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 
 * @author EDWARd
 */
public class RemoDisciplina extends javax.swing.JFrame {
    private Fachada fachada;
    private Usuario usuario;
    private Compiler telaAnt;
    private ArrayList <Disciplina> arrayDisciplina;
    /**
     * ates new form ConfigurarTelas000
    */
  public RemoDisciplina() {
        initComponents();
        this.setLocationRelativeTo(null);
        fachada = Fachada.getInstancia();
        arrayDisciplina = new ArrayList<>();
    }
  public RemoDisciplina(Compiler telaAnt,Usuario usuario){
      this();
      this.usuario = usuario;
      this.telaAnt=telaAnt;
      fachada = Fachada.getInstancia();
  }
     
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDisciplina = new javax.swing.JTable();
        Concluir = new javax.swing.JButton();
        remover = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Remover Disciplinas");
        setBackground(new java.awt.Color(51, 0, 255));
        setForeground(new java.awt.Color(255, 204, 204));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Remover Disciplinas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 36, -1, -1));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });
        jScrollPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseDragged(evt);
            }
        });

        tabelaDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Selecione"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDisciplina.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tabelaDisciplina);
        tabelaDisciplina.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 61, 392, 287));

        Concluir.setText("Concluir");
        Concluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConcluirActionPerformed(evt);
            }
        });
        getContentPane().add(Concluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 110, -1));

        remover.setText("Remover");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });
        getContentPane().add(remover, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 110, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/fafica/pi1/rightcode/telas/icones/back.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConcluirActionPerformed
         
        try {
             this.telaAnt.setEnabled(true);
        this.setVisible(false);
            this.telaAnt.carregarListaCombo();
        } catch (DisciplinaListaVaziaException | SQLException ex) {
           
        }
      
        
        
    }//GEN-LAST:event_ConcluirActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        ArrayList <Disciplina>removidos= new ArrayList();
            for (int id = 0; id < tabelaDisciplina.getRowCount(); id++) { 
              
              if ((Boolean)tabelaDisciplina.getValueAt(id,1) == true){
                  try {                 
                      Disciplina u = fachada.ListaDisciplina().get(id);
                      
                      fachada.RemoverDisciplina(u);
                      
                      carregarJTable();
                  } catch (          DisciplinaListaVaziaException | SQLException | DisciplinaNaoEncontradaException | CodigoInvalidoException ex) {
                      Logger.getLogger(RemoDisciplina.class.getName()).log(Level.SEVERE, null, ex);
                  }
            try {
                carregarJTable();
                
            } catch (SQLException ex) {
                Logger.getLogger(RemoDisciplina.class.getName()).log(Level.SEVERE, null, ex);
           
            } catch (DisciplinaListaVaziaException ex) {
                Logger.getLogger(RemoDisciplina.class.getName()).log(Level.SEVERE, null, ex);
            }
                     
    }//GEN-LAST:event_removerActionPerformed
        }
       
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        try {
            this.telaAnt.setEnabled(true);
        this.setVisible(false);
            this.telaAnt.carregarListaCombo();
        } catch (DisciplinaListaVaziaException ex) {
            
        } catch (SQLException ex) {
            
        }
    }//GEN-LAST:event_formWindowClosing

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        try {
            carregarJTable();
        } catch (SQLException ex) {
            Logger.getLogger(RemoDisciplina.class.getName()).log(Level.SEVERE, null, ex);
     
        } catch (DisciplinaListaVaziaException ex) {
            Logger.getLogger(RemoDisciplina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jScrollPane1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseDragged
        
    }//GEN-LAST:event_jScrollPane1MouseDragged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            carregarJTable();
        } catch (SQLException | DisciplinaListaVaziaException ex) {
            Logger.getLogger(RemoDisciplina.class.getName()).log(Level.SEVERE, null, ex);
      
        }
    }//GEN-LAST:event_formWindowActivated
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
        	JOptionPane.showMessageDialog(null,ex.getMessage());
        } catch (InstantiationException ex) {
        	JOptionPane.showMessageDialog(null,ex.getMessage());
        } catch (IllegalAccessException ex) {
        	JOptionPane.showMessageDialog(null,ex.getMessage());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        	JOptionPane.showMessageDialog(null,ex.getMessage());
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoDisciplina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Concluir;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton remover;
    private javax.swing.JTable tabelaDisciplina;
    // End of variables declaration//GEN-END:variables

    
    //metodo teste
    void carregarJTable() throws SQLException, DisciplinaListaVaziaException {
       // Fachada fachada = Fachada.getInstancia();
        ArrayList<Disciplina> listaDisciplina= new ArrayList<Disciplina>();
        listaDisciplina = fachada.ListaDisciplina();
        
        DefaultTableModel modelo = new DefaultTableModel(){
             @Override
             
            public Class getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return String.class;
                    default:
                        return Boolean.class;
                }
            }
            
        };
            
        
        
        modelo.addColumn("Nome");
        modelo.addColumn("Selecione");
        
       if(listaDisciplina==null){
           modelo.addRow(new Object [] {null,null});
       }
        
        for (int i = 0; i < listaDisciplina.size(); i++) {
            Disciplina d= listaDisciplina.get(i);
            //System.out.println(f.toString());
            // Alimenta as linhas de dados  
            
            modelo.addRow(new Object [] {d.getNome() ,false});
        }
    

        
          tabelaDisciplina.setModel(modelo); 
                 
      
        
         
        

    } 
    
     public Disciplina buscaDisciplina() throws SQLException, DisciplinaListaVaziaException {
        //Fachada fachada = Fachada.getInstancia();
        ArrayList<Disciplina> listaDisciplina;
        listaDisciplina= fachada.ListaDisciplina();
         
        Disciplina buscaFiltro = null;
        for(Disciplina Disciplina: listaDisciplina){
            buscaFiltro = Disciplina;
        }
        return buscaFiltro;
    }
     
     
     public ArrayList disciplinaSelecionadas() throws SQLException, DisciplinaListaVaziaException{        
//        int []linha = tabelaDisciplina.getSelectedRows();
//       Disciplina u =null;
//         for(int i=0;i<linha.length;i++){
//            u = Fachada.getInstancia().ListaFiltro().get(linha[i]);
//            arrayFiltro.add(u);
//          }
//         //somente para exibir no console
//           for(int i=0;i<arrayFiltro.size();i++){
//   		 Disciplina f=arrayFiltro.get(i);
//   		 System.out.println("\n"+f.getNome());
//          }
//          JOptionPane.showMessageDialog(null,"Filtros Ativados!"); 
          for (int id = 0; id < tabelaDisciplina.getRowCount(); id++) { 
              
              if ((Boolean)tabelaDisciplina.getValueAt(id,3) == true){
                  Disciplina u = fachada.ListaDisciplina().get(id);
                  arrayDisciplina.add(u);
                  System.out.println("\n"+u.getNome());
                   }
               }
             if(!arrayDisciplina.isEmpty()){
                 JOptionPane.showMessageDialog(null,"Filtros Ativados!");
             } else {
                 JOptionPane.showMessageDialog(null,"Filtros Não Selecionados!");
             }
           
            return arrayDisciplina;
        }
    }


